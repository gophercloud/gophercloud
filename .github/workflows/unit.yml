on: [push, pull_request]
name: Unit Testing
permissions:
  contents: read

jobs:
  test:
    permissions:
      checks: write  # for shogo82148/actions-goveralls to create a new check based on the results
      contents: read  # for actions/checkout to fetch code
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version:
          - "1.14"
          - "1"

    env:
      GO111MODULE: "on"

    steps:
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/checkout@v3

      - name: Setup environment
        run: |
          go install github.com/wadey/gocovmerge@master || go get github.com/wadey/gocovmerge
          go install golang.org/x/tools/cmd/goimports@latest || go get golang.org/x/tools/cmd/goimports

      - name: Run go vet
        run: |
          go vet ./...

      - name: Run unit tests
        run: |
          ./script/coverage
          ./script/format
          ./script/unittest -v

      - uses: shogo82148/actions-goveralls@v1.6.0
        with:
          path-to-profile: cover.out
          flag-name: Go-${{ matrix.go-version }}
          parallel: true

  finish:
    permissions:
      checks: write  # for shogo82148/actions-goveralls to create a new check based on the results
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1.6.0
        with:
          parallel-finished: true
