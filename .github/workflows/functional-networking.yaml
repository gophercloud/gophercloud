name: functional-networking
on:
  merge_group:
  pull_request:
  schedule:
    - cron: '0 0 */3 * *'
jobs:
  functional-networking:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "master"
            openstack_version: "master"
            ubuntu_version: "24.04"
            additional_services: "openstack-cli-server"
          - name: "epoxy"
            openstack_version: "stable/2025.1"
            ubuntu_version: "22.04"
            additional_services: "openstack-cli-server"
          - name: "dalmatian"
            openstack_version: "stable/2024.2"
            ubuntu_version: "22.04"
            additional_services: "openstack-cli-server"
          - name: "caracal"
            openstack_version: "stable/2024.1"
            ubuntu_version: "22.04"
            additional_services: ""
    runs-on: ubuntu-${{ matrix.ubuntu_version }}
    name: Neutron on OpenStack ${{ matrix.name }}
    steps:
      - name: Checkout Gophercloud
        uses: actions/checkout@v5

      - name: Check changed files
        uses: ./.github/actions/file-filter
        id: changed-files
        with:
          patterns: |
            openstack/auth_env.go
            openstack/client.go
            openstack/endpoint.go
            openstack/endpoint_location.go
            openstack/config/provider_client.go
            openstack/utils/choose_version.go
            openstack/utils/discovery.go
            **networking**
            .github/workflows/functional-networking.yaml

      - name: Skip tests for unrelated changed-files
        if: ${{ ! fromJSON(steps.changed-files.outputs.matches) }}
        run: |
          echo "No relevant files changed - skipping tests for ${{ matrix.name }}"
          echo "TESTS_SKIPPED=true" >> $GITHUB_ENV

      - name: Create additional neutron policies
        if: ${{ fromJSON(steps.changed-files.outputs.matches) }}
        run: |
          mkdir /tmp/neutron-policies
          cat << EOF >> /tmp/neutron-policies/port_binding.yaml
          ---
          "create_port:binding:profile": "rule:admin_only or rule:service_api"
          "update_port:binding:profile": "rule:admin_only or rule:service_api"
          EOF

      - name: Deploy devstack
        if: ${{ fromJSON(steps.changed-files.outputs.matches) }}
        uses: gophercloud/devstack-action@60ca1042045c0c9e3e001c64575d381654ffcba1
        with:
          branch: ${{ matrix.openstack_version }}
          conf_overrides: |
            enable_plugin neutron-dynamic-routing https://github.com/openstack/neutron-dynamic-routing ${{ matrix.openstack_version }}
            enable_plugin neutron-vpnaas https://github.com/openstack/neutron-vpnaas ${{ matrix.openstack_version }}
            enable_plugin networking-bgpvpn https://github.com/openstack/networking-bgpvpn.git ${{ matrix.openstack_version }}
            Q_ML2_PLUGIN_EXT_DRIVERS=qos,port_security,dns_domain_keywords
            BGP_SCHEDULER_DRIVER=neutron_dynamic_routing.services.bgp.scheduler.bgp_dragent_scheduler.StaticScheduler

            [[post-config|\$NEUTRON_CONF]]
            [oslo_policy]
            policy_dirs = /tmp/neutron-policies
          enabled_services: "neutron-dns,neutron-qos,neutron-segments,neutron-trunk,neutron-uplink-status-propagation,neutron-network-segment-range,neutron-port-forwarding,${{ matrix.additional_services }}"

      - name: Checkout go
        if: ${{ fromJSON(steps.changed-files.outputs.matches) }}
        uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Run Gophercloud acceptance tests
        if: ${{ fromJSON(steps.changed-files.outputs.matches) }}
        run: |
          source ${{ github.workspace }}/script/stackenv
          make acceptance-networking
          echo "TESTS_RUN=true" >> $GITHUB_ENV
        env:
          DEVSTACK_PATH: ${{ github.workspace }}/devstack
          OS_BRANCH: ${{ matrix.openstack_version }}

      - name: Generate logs on failure
        run: ./script/collectlogs
        if: ${{ failure() && fromJSON(steps.changed-files.outputs.matches) }}

      - name: Upload logs artifacts on failure
        if: ${{ failure() && fromJSON(steps.changed-files.outputs.matches) }}
        uses: actions/upload-artifact@v5
        with:
          name: functional-networking-${{ matrix.name }}-${{ github.run_id }}
          path: /tmp/devstack-logs/*

      - name: Set job status
        run: |
          if [[ "${{ env.TESTS_SKIPPED }}" == "true" || "${{ env.TESTS_RUN }}" == "true" ]]; then
            echo "Job completed successfully (either ran tests or skipped appropriately)"
            exit 0
          else
            echo "Job failed - neither tests ran nor were properly skipped"
            exit 1
          fi
